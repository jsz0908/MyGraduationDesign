C51 COMPILER V9.60.0.0   EEPROM                                                            05/14/2025 15:08:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE driver\eeprom.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\sys) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\eeprom.lst) TABS(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          #include "i2c.h"
   3          #include "delay.h"
   4          
   5          #define EEPROM_ADDR_WRITE 0xA0
   6          #define EEPROM_ADDR_READ  0xA1
   7          
   8          void EEPROM_WriteData(unsigned char address, unsigned char database) {
   9   1          I2C_Start();
  10   1          I2C_SendByte(EEPROM_ADDR_WRITE);
  11   1          I2C_WaitAck();
  12   1      
  13   1          I2C_SendByte(address);
  14   1          I2C_WaitAck();
  15   1      
  16   1          I2C_SendByte(database);
  17   1          I2C_WaitAck();
  18   1      
  19   1          I2C_Stop();
  20   1          Delay_ms(5);  // EEPROM 写入延时
  21   1      }
  22          
  23          
  24          
  25          
  26          unsigned char EEPROM_ReadData(unsigned char address) {
  27   1          unsigned char database;
  28   1      
  29   1          I2C_Start();
  30   1          I2C_SendByte(EEPROM_ADDR_WRITE);
  31   1          I2C_WaitAck();
  32   1      
  33   1          I2C_SendByte(address);
  34   1          I2C_WaitAck();
  35   1      
  36   1          I2C_Start();  // 重启 I2C
  37   1          I2C_SendByte(EEPROM_ADDR_READ);
  38   1          I2C_WaitAck();
  39   1      
  40   1          database = I2C_ReceiveByte();
  41   1          I2C_SendNack();  // 只读一个字节，所以发 NACK
  42   1      
  43   1          I2C_Stop();
  44   1          return database;
  45   1      }
  46          
  47          void EEPROM_WriteFloat(unsigned char addr, float val) {
  48   1          int i;
  49   1          unsigned char *p = (unsigned char *)&val;
  50   1          for (i = 0; i < 4; i++) {
  51   2              EEPROM_WriteData(addr + i, *(p + i));
  52   2          }
  53   1      }
  54          
C51 COMPILER V9.60.0.0   EEPROM                                                            05/14/2025 15:08:30 PAGE 2   

  55          float EEPROM_ReadFloat(unsigned char addr) {
  56   1          int i;
  57   1          float val;
  58   1          unsigned char *p = (unsigned char *)&val;
  59   1          for (i = 0; i < 4; i++) {
  60   2              *(p + i) = EEPROM_ReadData(addr + i);
  61   2          }
  62   1          return val;
  63   1      }
  64          
  65          void EEPROM_WriteInt(unsigned char addr, unsigned int val) {
  66   1          EEPROM_WriteData(addr, (val >> 8) & 0xFF);  // 高字节
  67   1          EEPROM_WriteData(addr + 1, val & 0xFF);     // 低字节
  68   1      }
  69          
  70          unsigned int EEPROM_ReadInt(unsigned char addr) {
  71   1          return (EEPROM_ReadData(addr) << 8) | EEPROM_ReadData(addr + 1);
  72   1      }
  73          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    267    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
